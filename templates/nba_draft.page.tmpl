{{template "base" .}}

{{define "content"}}
<div class="container p-3">
  <div class="row align-items-md-stretch mb-4 bg-light border border-dark rounded-3 p-5">
    <div class="col-md-12">
      <div class="row justify-content-center">
        <div class="col-md-5">
          <div class="row">
            <div class="p-1 px-5 rounded-3 draftbutton" style="font-size: 24px;" onclick="randomize()">
              <img src="/static/images/BKslogan2.png" style="max-width: 100%;" alt="">
            </div>
          </div>
        </div>
      </div>
      <div id="draftpicks" class="hidden">
        <div id="draftpicksrefresh" class="row">
          {{range $index, $teamInfo := index $.Data "nba_teams"}}
          <div class="col-md-3 justify-content-center text-center p-5">
            <div class="row">
              <p style="font-size: 24px;">Pick {{add $index 1}}</p>
            </div>
            <div class="row pointer" style="position: relative;">
              <div class="fw-semibold badge {{if eq $teamInfo.DarkText "true"}}text-dark{{end}}"
                style="font-size: 20px; text-transform:uppercase; background-image: linear-gradient(90deg, {{$teamInfo.Color1}}, {{$teamInfo.Color2}}); position: absolute;"
                onclick="revealPick('{{$index}}')">
                {{$teamInfo.Name}}
              </div>
              <div id="pick_{{$index}}" class="badge bkcolor pointer" style="font-size: 20px; position: absolute;"
                onclick="revealPick('{{$index}}')">
                ?
              </div>
              <div class="badge bkcolor" style="font-size: 20px;" style="position: absolute;">?</div>
            </div>
          </div>
          {{end}}
        </div>
      </div>
    </div>
  </div>
  <div class="row bg-light rounded-3 border">
    <div class="col-md-8">

      <h3>Chat</h3>

      <div class="form-group">
        <label for="username">Username:</label>
        <input type="text" name="username" id="username" class="form-control" autocomplete="off">
      </div>

      <div class="form-group">
        <label for="message">Message:</label>
        <input type="text" name="message" id="message" class="form-control" autocomplete="off">
      </div>

      <input type="hidden" name="action" id="action">

      <hr>

      <div id="output" class="form-control" style="min-height: 160px;">

      </div>

    </div>
    <div class="col-md-4">

      <h3>Who's Online</h3>

      <ul id="online_users">

      </ul>

    </div>
  </div>
  <!--
  <div class="row">
    <div class="col-md-12">
      <div class="tab-content" id="nav-tabContent">
        {{range $index, $players := index .Data "nba_players"}}
          <div class="tab-pane fade" id="player{{$players.PlayerID}}" role="tabpanel" aria-labelledby="player{{$players.PlayerID}}-list">
            <table class="table table-sm table-responsive table-borderless">
              <thead style="font-size: 8px; white-space: nowrap; text-align: center;">
                  <tr style="background-color: white;">
                      <th></th>
                      <th class="ps-2" style="text-align: start;"></th>
                      <th></th>
                      <th title="Overall Rating" data-bs-toggle="tooltip" data-bs-placement="bottom">OVR</th>
                      <th title="Close Shot" data-bs-toggle="tooltip" data-bs-placement="bottom">CLOSE</th>
                      <th title="Mid-Range Shot " data-bs-toggle="tooltip" data-bs-placement="bottom">MID</th>
                      <th title="Three-Point Shot" data-bs-toggle="tooltip" data-bs-placement="bottom">3PT</th>
                      <th title="Free Throw" data-bs-toggle="tooltip" data-bs-placement="bottom">FT</th>
                      <th title="Acceleration" data-bs-toggle="tooltip" data-bs-placement="bottom">ACCL</th>
                      <th title="Speed" data-bs-toggle="tooltip" data-bs-placement="bottom">SPD</th>
                      <th title="Strength" data-bs-toggle="tooltip" data-bs-placement="bottom">STR</th>
                      <th title="Vertical" data-bs-toggle="tooltip" data-bs-placement="bottom">VERT</th>
                      <th title="Driving Dunk" data-bs-toggle="tooltip" data-bs-placement="bottom">DUNK</th>
                      <th title="Draw Foul" data-bs-toggle="tooltip" data-bs-placement="bottom">FOUL</th>
                      <th title="Steal" data-bs-toggle="tooltip" data-bs-placement="bottom">STL</th>
                      <th title="Block" data-bs-toggle="tooltip" data-bs-placement="bottom">BLK</th>
                      <th title="Perimeter Defense" data-bs-toggle="tooltip" data-bs-placement="bottom">PER D</th>
                      <th title="Interior Defense" data-bs-toggle="tooltip" data-bs-placement="bottom">INT D</th>
                      <th title="Defense" data-bs-toggle="tooltip" data-bs-placement="bottom">DEF</th>
                      <th title="Offensive Rebound" data-bs-toggle="tooltip" data-bs-placement="bottom">OREB</th>
                      <th title="Defensive Rebound" data-bs-toggle="tooltip" data-bs-placement="bottom">DREB</th>
                      <th title="Total Attributes" data-bs-toggle="tooltip" data-bs-placement="bottom">TOTAL</th>
                  </tr>
              </thead>
              <tbody style="white-space: nowrap; text-align: center; vertical-align: middle;">

                  <tr>
                      <td class="p-0">
                        {{if $players.TeamID.Int64}}
                                {{range $teamInfo := index $.Data "nba_teams"}}
                                    {{if eq $teamInfo.TeamID $players.TeamID}}
                                        <img src="{{if ne $players.ImgUrl ""}}{{$players.ImgUrl}}{{else}}/static/images/lightProfile.png{{end}}"
                                        alt="" class="header-image rounded-circle inline-block bg-light border">
                                    {{end}}
                                {{end}}
                                {{else}}
                                    <img src="{{if ne $players.ImgUrl ""}}{{$players.ImgUrl}}{{else}}/static/images/lightProfile.png{{end}}"
                                    alt="" class="header-image rounded-circle bg-light border">
                                {{end}}
                      </td>
                      <td class="p-0 ps-2" style="min-width: 205px;">
                          <div class="d-flex player-card">
                              <div class="p-0 inline-block">
                                  <p class="m-0">{{$players.FirstName}} {{$players.LastName}}</p>
                                  <p class="text-muted my-0" style="font-size: 10px;">{{$players.Archetype}}</p>
                                  <div class="my-0">
                                      <p class="text-muted my-0" style="font-size: 10px;">
                                          {{$players.PrimaryPosition}}
                                          {{$players.SecondaryPosition}}
                                          | {{$players.Height}}cm | {{$players.Weight}}kg
                                      </p>
                                  </div>

                              </div>
                          </div>
                      </td>
                      <td class="p-0 py-1">
                          <div class="mt-2" style="font-size: 0px;">
                              <div class="d-inline-block position-relative">
                                      <img src="/static/images/2k-bronze-badge-count.webp" alt="" width="30">
                                      <p class="position-absolute text-center badge-count" style="font-size: 16px;">{{$players.BronzeBadgesCount}}</p>
                              </div>
                              <div class="d-inline-block position-relative">
                                  <img src="/static/images/2k-silver-badge-count.webp" alt="" width="30">
                                  <p class="position-absolute text-center badge-count" style="font-size: 16px;">{{$players.SilverBadgesCount}}</p>
                              </div>
                              <div class="d-inline-block position-relative">
                                  <img src="/static/images/2k-gold-badge-count.webp" alt="" width="30">
                                  <p class="position-absolute text-center badge-count" style="font-size: 16px;">{{$players.GoldBadgesCount}}</p>
                              </div>
                              <div class="d-inline-block position-relative">
                                  <img src="/static/images/2k-hof-badge-count.webp" alt="" width="30">
                                  <p class="position-absolute text-center badge-count" style="font-size: 16px;">{{$players.HOFBadgesCount}}</p>
                              </div>
                              <div class="d-inline-block position-relative">
                                  <img src="/static/images/2k-total-badge-count.webp" alt="" width="30">
                                  <p class="position-absolute text-center badge-count text-white" style="font-size: 16px;">{{$players.TotalBadgesCount}}</p>
                              </div>
                          </div>
                      </td>
                      <td>
                          <span style="font-size: 16px;" class="badge badge-pill p-1 fw-semibold
                          {{if ge $players.StatsOverall 81}}
                              {{if ge $players.StatsOverall 86}}
                                  {{if ge $players.StatsOverall 91}}
                                      bkcolor
                                  {{else}}
                                      badgecolor1
                                  {{end}}
                              {{else}}
                                  badgecolor2
                              {{end}}
                          {{else}}
                          bg-light border text-dark
                          {{end}}
                      ">{{.StatsOverall}}</span></td>
                      <td>{{$players.StatsCloseShot}}</td>
                      <td>{{$players.StatsMidRangeShot}}</td>
                      <td>{{$players.StatsThreePointShot}}</td>
                      <td>{{$players.StatsFreeThrow}}</td>
                      <td>{{$players.StatsAcceleration}}</td>
                      <td>{{$players.StatsSpeed}}</td>
                      <td>{{$players.StatsStrength}}</td>
                      <td>{{$players.StatsVertical}}</td>
                      <td>{{$players.StatsDrivingDunk}}</td>
                      <td>{{$players.StatsDrawFoul}}</td>
                      <td>{{$players.StatsSteal}}</td>
                      <td>{{$players.StatsBlock}}</td>
                      <td>{{$players.StatsPerimeterDefense}}</td>
                      <td>{{$players.StatsInteriorDefense}}</td>
                      <td>{{$players.StatsDefending}}</td>
                      <td>{{$players.StatsOffensiveRebound}}</td>
                      <td>{{$players.StatsDefensiveRebound}}</td>
                      <td>
                          <span class="badge badge-pill text-dark border bg-light">{{$players.StatsTotalAttributes}}</span>
                      </td>
                      <td>
                        <button type="submit" class="btn btn-primary {{if $players.TeamID.Valid}}btn-dark disabled{{end}}">Draft Player</button>
                      </td>
                  </tr>

              </tbody>
          </table>
          </div>
        {{end}}
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col-md-9 bg-secondary">
      hello
    </div>
    <div class="col-md-3 bg-success">
      <div class="list-group" id="list-tab" role="tablist" style="max-height: 600px; overflow:scroll; -webkit-overflow-scrolling: touch;">
        {{range $index, $players := index .Data "nba_players"}}
          <a class="list-group-item list-group-item-action {{if $players.TeamID.Valid}}fst-italic fw-lighter{{end}}" id="player{{$players.PlayerID}}-list" data-bs-toggle="list" href="#player{{$players.PlayerID}}" role="tab" aria-controls="player{{$players.PlayerID}}">{{$players.StatsOverall}} {{$players.FirstName}} {{$players.LastName}}</a>
        {{end}}
      </div>
    </div>
  </div>
  -->

  <div class="row">
    <div class="col-md-12 text-center">
      <div class="progress" style="height: 5px;">
        <div id="countdown_bar" class="progress-bar bkcolor" role="progressbar" aria-label="Success example" style="width: 100%; height: 10px;" aria-valuenow="45" aria-valuemin="0" aria-valuemax="45"></div>
      </div>      
      <p><h1 id="countdown_text"></h1></p>
    </div>
    <div id="timerBtn" class="btn">Start</div>
  </div>

  <div class="row">
    <div class="col-md-12 p-0 justify-content-center d-flex">
      <img class="img-fluid rounded-3" style="max-height: 500px;" src="/static/images/Bryant.png" alt="">
    </div>
  </div>
  <div class="row mt-2">
    <p class="d-flex justify-content-center">R.I.P. MAMBA 1978-2020</p>
  </div>
</div>
{{end}}

{{define "js"}}

<script>
  let socket = null;
  let o = document.getElementById("output");
  let clock = document.getElementById("countdown_text");

  window.onbeforeunload = function() {
    console.log("Leaving");
    let jsonData = {};
    jsonData["action"] = "left";
    socket.send(JSON.stringify(jsonData))
  }

  document.addEventListener("DOMContentLoaded", function() {
    socket = new WebSocket("ws://localhost:8080/ws");

    socket.onopen = () => {
      console.log("Successfully connected");
    }

    socket.onclose = () => {
      console.log("Connection closed");
    }

    socket.onerror = error => {
      console.log("There was an error");
    }

    socket.onmessage = msg => {
      let data = JSON.parse(msg.data);
      console.log("Action is", data.action);

      switch (data.action) {
        case "list_users":
          let ul = document.getElementById("online_users");
          while (ul.firstChild) ul.removeChild(ul.firstChild);

          if (data.connected_users.length > 0) {
            data.connected_users.forEach(function(item) {
              let li = document.createElement("li");
              li.appendChild(document.createTextNode(item))
              ul.appendChild(li)
            })
          }
          break;

        case "broadcast":
          o.innerHTML = o.innerHTML + data.message + "<br>";
          break;

        case "timer":
          clock.innerHTML = data.countdown;
          document.getElementById("countdown_bar").style.width = (data.countdown/45)*100 + "%";
          break;
      }
    }

    let userInput = document.getElementById("username");
        userInput.addEventListener("change", function () {
            let jsonData = {};
            jsonData["action"] = "username";
            jsonData["username"] = this.value;
            socket.send(JSON.stringify(jsonData));
        })

    document.getElementById("message").addEventListener("keydown", function(event) {
      if (event.code === "Enter") {
        if (!socket) {
          console.log("No connection");
          return false
        }
        event.preventDefault();
        event.stopPropagation();
        sendMessage();
      }
    })

    document.getElementById("timerBtn").addEventListener("click", function(event) {
      if (!socket) {
        console.log("No connection");
        return false
      }
      event.preventDefault();
      event.stopPropagation();
      draftCountdown(45, 'countdown_bar', 'countdown_text')
    })
  })

  function sendMessage() {
    let jsonData = {};
    jsonData["action"] = "broadcast";
    jsonData["username"] = document.getElementById("username").value;
    jsonData["message"] = document.getElementById("message").value;
    socket.send(JSON.stringify(jsonData))
    document.getElementById("message").value = "";
  }

  function draftCountdown(timeleft, bar, text) {
    clearTimeout();
    return new Promise((resolve, reject) => {
      var countdownTimer = setInterval(() => {
        timeleft--;
        let jsonData = {};
        jsonData["action"] = "timer";
        jsonData["countdown"] = timeleft;
        console.log(jsonData);
        socket.send(JSON.stringify(jsonData))
        document.getElementById(bar).value = timeleft;
        document.getElementById(text).textContent = timeleft;

        if (timeleft <= 0) {
          clearInterval(countdownTimer);
          resolve(true);
        }
      }, 1000);
    });
  }

</script>

<script>
  const triggerTabList = document.querySelectorAll('#myList a')
  triggerTabList.forEach(triggerEl => {
    const tabTrigger = new bootstrap.Tab(triggerEl)

    triggerEl.addEventListener('click', event => {
      event.preventDefault()
      tabTrigger.show()
    })
  })
</script>

<script>
  function revealPick(index) {
    const str = 'pick_' + (index);
    $('#' + str).toggleClass("hidden");
  }

  function randomize() {
    var audio = new Audio('/static/mp3/Draft Chime.mp3');    
    audio.play();
    const str = 'draftpicks';
    $('#' + str).removeClass("hidden");
    $.ajax({
      type: 'GET',
      dataType: 'html',
      data: {
      },
      success: function (data) {
        console.log("success");
        $('#draftpicks').load(window.location.href + ' #draftpicksrefresh');
      }
    });
  }

  function stopAllAudio(){
    allAudios.forEach(function(audio){
    audio.pause();
  });
}

</script>

{{end}}