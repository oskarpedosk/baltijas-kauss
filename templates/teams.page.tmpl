{{template "base" .}}

{{define "content"}}

<title>{{.Data.team.Name}} | Baltijas Kauss</title>

<div class="container p-3">
    <div class="d-flex mb-2">
        {{range $team := index .Data.teams}}
        <div class="col rounded-3 mx-2 text-center fw-semibold" style="background-image: linear-gradient(90deg, {{$team.Color1}}, {{$team.Color2}});">
            <a class="nav-link {{if eq $team.DarkText "false"}}text-white{{end}}" href="/teams/{{$team.TeamID}}">{{$team.Abbreviation}}</a>
        </div>
        {{end}}
    </div>
    <div class="rounded-3 p-3 px-5" style="background-image: linear-gradient(90deg, {{.Data.team.Color1}}, {{.Data.team.Color2}});">
        <div class="row justify-content-between">
            {{range $index, $pos := seq 1 5}}
                <div class="col-md-2 mt-3 dropend">
                    <div class="player-shadow border border-dark text-dark {{if eq $.Data.team.DarkText "false"}}border-white text-white{{end}} border-2 rounded-3"
                        style="background-image: linear-gradient(90deg, {{$.Data.team.Color1}}, {{$.Data.team.Color2}});" data-bs-toggle="dropdown" aria-expanded="false">
                        <img id="pos{{$pos}}" class="img-fluid playerImage" src="/static/images/players/default_player.png" alt="" data-player_id="">
                    </div>
                    <ul class="dropdown-menu">
                        {{ range $.Data.players }}
                            <li class="px-3 pointer dropdown-item" onclick="assignPosition('{{.PlayerID}}', '{{$pos}}', '{{$.CSRFToken}}')">{{ .Overall }} {{ .LastName }}</li>
                        {{ end }}
                    </ul>
                </div>
            {{end}}
        </div>
        <div class="row justify-content-between">
            {{range seq 6 10}}
                <div id="pos{{.}}" class="col-md-2 mt-3">
                    <div class="player-shadow bg-dark text-secondary border border-dark border-2 rounded-3">
                        <img class="img-fluid" src="/static/images/players/default_player.png" alt="">
                    </div>
                </div>
            {{end}}
        </div>
        <div class="row justify-content-between">
            {{range seq 11 12}}
                <div id="pos{{.}}" class="col-md-2 mt-3">
                    <div class="player-shadow bg-dark text-secondary border border-dark border-2 rounded-3">
                        <img class="img-fluid" src="/static/images/players/default_player.png" alt="">
                    </div>
                </div>
            {{end}}
            <div class="col-md-2 text-center lh-1 dropend mt-3">
                <div class="h-100 player-shadow bg-dark border border-dark border-3 rounded-3 d-flex align-items-center justify-content-center">
                    <img class="img-fluid logo-white opacity-50" style="max-height: 50px"
                        src="/static/images/buttons/add.png" alt="">
                </div>
            </div>
            <div class="col-md-2 text-center lh-1 dropend mt-3">
                <div class="h-100 player-shadow bg-dark border border-dark border-3 rounded-3 d-flex align-items-center justify-content-center">
                    <img class="img-fluid logo-white opacity-50" style="max-height: 50px"
                        src="/static/images/buttons/remove.png" alt="">
                </div>
            </div>
            
            <div class="col-md-2"></div>
        </div>
        <hr class="my-4">
        <form action="/teams/{{.Data.team.TeamID}}" method="post">
        <div class="row justify-content-between mb-2">
            <input type="hidden" name="csrf_token" value="{{.CSRFToken}}">
            <input type="hidden" name="action" value="updateTeam">
            <div class="col-md-3">
                <input type="text" class="form-control"
                    name="team_name" value="{{with $.Form.Values.Get `team_name`}}{{.}}{{else}}{{.Data.team.Name}}{{end}}" autocomplete="off">
            </div>
            <div class="col-md-3">
                <input type="text" class="form-control"
                name="abbreviation" value="{{with $.Form.Values.Get `abbreviation`}}{{.}}{{else}}{{.Data.team.Abbreviation}}{{end}}" autocomplete="off">
            </div>
            <div class="col-md-3 d-flex">
                <input type="color" class="form-control form-control-color me-1" name="team_color1"
                value="{{with $.Form.Values.Get `team_color1`}}{{.}}{{else}}{{.Data.team.Color1}}{{end}}" title="Choose your color">
                <input style="margin-left: 10px;" type="color" class="form-control form-control-color" name="team_color2"
                value="{{with $.Form.Values.Get `team_color2`}}{{.}}{{else}}{{.Data.team.Color2}}{{end}}" title="Choose your color">
                <div class="form-check align-self-center" style="margin-left: 20px;">
                    <input class="form-check-input" type="checkbox" name="dark_text" value="true" {{if eq .Data.team.DarkText "true"}}checked{{else}}{{end}}>
                    <label class="form-check-label">
                        Dark Text
                    </label>
                </div>
            </div>
            <div class="col-md-3">
                <button style="width: 100%;" type="submit" class="btn btn-outline-{{if eq .Data.team.DarkText "true"}}dark{{else}}light{{end}}">Update</button>
            </div>
        </div>
        <div class="row justify-content-around" style="font-size: 14px; color: red;">
            <div class="col-md-3">
                {{with $.Form.Errors.Get "team_name"}}
                    <p>
                        {{.}}
                    </p>
                {{end}}
            </div>
            <div class="col-md-3">
                {{with $.Form.Errors.Get "abbreviation"}}
                    <p>
                        {{.}}
                    </p>
                {{end}}
            </div>
            <div class="col-md-3"></div>
            <div class="col-md-3"></div>
        </div>
        </form>
    </div>
</div>

{{end}}

{{define "js"}}

<script>
    const playersArray = {{.Data.players}}
    const playerImages = document.querySelectorAll(".playerImage")
    // Fill spots
    playersArray.forEach(player => {
        if (player.assigned_position !== 0) {
            const playerIMG = document.getElementById('pos' + player.assigned_position)
            playerIMG.src = player.img_url
            playerIMG.dataset["player_id"] = player.player_id
        }
    })

    function assignPosition(playerID, position, csrf_token) {
        const playerIMG = document.getElementById('pos' + position)
        const removePlayer = playerIMG.dataset["player_id"]
        for (let i = 0; i < playersArray.length; i++) {
            let player = playersArray[i]
            if (player.player_id == playerID) {
                for (let i = 0; i < playerImages.length; i++) {
                    if (playerImages[i].dataset["player_id"] == player.player_id) {
                        playerImages[i].dataset["player_id"] = ""
                        playerImages[i].src = "/static/images/players/default_player.png"
                        break
                    }
                }
                playerIMG.src = player.img_url
                playerIMG.dataset["player_id"] = player.player_id
                $.ajax({
                type: "POST",
                url: window.location.href,
                data : {
                    action: "updatePosition",
                    csrf_token: csrf_token,
                    player_id: playerID,
                    remove_player_id: removePlayer,
                    position: position,
                },
                success: function(response) {
                    notie.alert({ type: 1, text: 'Successfully assigned position!'});
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    notie.alert({ type: 3, text: 'Error changing position'});
                }
                });
                break
            }
        }
    }
</script>

{{end}}